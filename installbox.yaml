---
- name: Tasks to create a system using di-netboot-assistant and dnsmasq
  hosts: all
  become: yes

  vars:

    debian_codename: "{{ lookup('env', 'CODENAME')|default('bullseye', true) }}"
    debian_distribution: "{{ lookup('env', 'DISTRIBUTION')|default('stable', true) }}"
    dhcp_range_start: 10.0.1.5
    dhcp_range_stop: 10.0.1.253
    netboot_address: 10.0.1.2
    netboot_nic: "{{ lookup('env', 'NIC')|default('eth1', true) }}"
    preseed_path: "{{ lookup('env', 'PRESEED')|default('preseed.cfg', true) }}"
    target_domain: "{{ lookup('env', 'PRESEED_DOMAIN')|default('example.net', true) }}"
    target_hostname: "{{ lookup('env', 'PRESEED_HOSTNAME')|default('undefined', true) }}"
    target_nic: "{{ lookup('env', 'PRESEED_NIC')|default('eth0', true) }}"
    subnet_mask: 255.255.255.0
    tftp_directory: /var/lib/tftpboot

  tasks:
    - name: Install the prerequisite software
      package:
        name: ['di-netboot-assistant', 'dnsmasq', 'nftables', 'unzip']

    - name: Configure the di-netboot-assistant interface
      copy:
        backup: yes
        content: |
          auto {{ netboot_nic }}
          iface {{ netboot_nic }} inet static
            address {{ netboot_address }}
            netmask {{ subnet_mask }}
        dest: /etc/network/interfaces.d/50_interface_{{ netboot_nic }}

    - name: Ensure the interface is up and running
      command: ifup {{ netboot_nic }}

    - name: Stop dnsmasq and prevent it from starting at boot
      service:
        name: dnsmasq
        state: stopped
        enabled: no

    - name: Create the dnsmasq configuration file
      copy:
        backup: yes
        content: |
          dhcp-range={{ dhcp_range_start }},{{ dhcp_range_stop }},2h
          enable-tftp
          tftp-root={{ tftp_directory }}
          dhcp-boot=d-i/n-a/pxelinux.0
          dhcp-match=set:efi-x86_64,option:client-arch,7
          dhcp-boot=tag:efi-x86_64,d-i/n-a/bootnetx64.efi
        dest: /etc/dnsmasq.d/netboot-dnsmasq.conf

    - name: Create the tftpboot directory for di-netboot-assistant
      file:
        path: "{{ tftp_directory }}"
        state: directory

    - name: Enable ipv4 forwarding
      sysctl:
        name: net.ipv4.ip_forward
        value: 1
        sysctl_set: yes
        sysctl_file: /etc/sysctl.d/netboot-sysctl.conf
        state: present
        reload: yes

    - name: Configure NAT and masquerading
      command: "{{ item }}"
      with_items:
        - nft add table nat
        - nft add chain nat prerouting { type nat hook prerouting priority 0 \; }
        - nft add chain nat postrouting { type nat hook postrouting priority 100 \; }
        - nft add rule nat postrouting masquerade

    - name: Save original nftables.conf configuration
      copy:
        src: /etc/nftables.conf
        dest: /etc/nftables.conf.orig
        remote_src: yes

    - name: Save the current ruleset as the configuration
      shell: nft list ruleset > /etc/nftables.conf
      args:
        executable: /bin/bash

    - name: Restart the services to load the configuration changes
      service:
        enabled: true
        name: "{{ item }}"
        state: restarted
      with_items: ['dnsmasq', 'nftables']

    - name: Install the Debian distribution for the di-netboot-assistant
      command: di-netboot-assistant install {{ debian_distribution }}

    - name: Create the directory for the preseed file
      file:
        path: "{{ tftp_directory }}/d-i/{{ debian_codename }}"
        state: directory

    - name: Copy the preseed file to the system and put in dist directory
      copy:
        src: "{{ preseed_path }}"
        dest: "{{ tftp_directory }}/d-i/{{ debian_codename }}/preseed.cfg"

    # Since the system boots from the network (PXE) the installer gets the
    # hostname and domain from the DHCP server. Therefore you can not set up
    # the host.domain with the preseed file. These values must be provided as
    # boot parameters.
    # Critical priority makes the installer prompt only for critical questions.
    # net.ifnames=0 makes the kernel use the traditional style of naming NICs.
    - name: Assemble boot parameters
      set_fact:
        boot_parameters: >-
          auto=true
          domain={{ target_domain }}
          hostname={{ target_hostname }}
          netcfg/choose_interface={{ target_nic }}
          priority=critical
          url=tftp://{{ netboot_address }}

    - name: Create an entry to boot the automatic installer with the preseed file
      blockinfile:
        backup: yes
        block: |
          TIMEOUT 40
          LABEL preseed
             MENU LABEL Debian netboot (amd64) + preseed
             kernel ::/d-i/n-a/{{ debian_distribution }}/amd64/linux
             append initrd=::/d-i/n-a/{{ debian_distribution }}/amd64/initrd.gz --- {{ boot_parmeters }}
        path: /etc/di-netboot-assistant/pxelinux.HEAD

    - name: Edit the pxeboot.cfg.HEAD file to default to the preseed menu
      lineinfile:
        regexp: "^DEFAULT "
        line: DEFAULT preseed
        path: /etc/di-netboot-assistant/pxelinux.HEAD

    - name: Create a menu entry to boot the automatic installer with the preseed file
      blockinfile:
        backup: yes
        block: |
          set timeout=4
          menuentry 'preseed' {
             linux /d-i/n-a/{{ debian_distribution }}/amd64/linux --- {{ boot_parameters }}
             initrd /d-i/n-a/{{ debian_distribution }}/amd64/initrd.gz
          }
        path: /etc/di-netboot-assistant/grub.cfg.HEAD

    - name: Edit the grub.cfg.HEAD file to auto boot with the preseed file
      lineinfile:
        regexp: "^set default="
        line: "set default='preseed'"
        path: /etc/di-netboot-assistant/grub.cfg.HEAD

    - name: Edit the grub.cfg.HEAD to play a tune
      lineinfile:
        regexp: "^play "
        line: "play 2000 400 4 0 1 500 4 0 1 600 4 0 1 800 6"
        path: /etc/di-netboot-assistant/grub.cfg.HEAD

    - name: Rebuild di-netboot-assistant menu
      command: di-netboot-assistant rebuild-menu
